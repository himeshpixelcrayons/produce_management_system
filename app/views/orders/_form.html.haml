.row
	.col-lg-offset-1.col-md-10
		= simple_form_for(@order, html: { class: 'form' }) do |f|
			.card
				.card-head.style-primary
					%header
						= f.object.new_record? ? "New Order" : "Edit Order"
				.card-body
					= f.error_notification
					%br/
					.row
						.col-md-6
							.form-group
								%label.col-sm-2.control-label Customer
								.col-sm-8
									= f.input :customer_id, as: :select, collection: Customer.all.map{|v| [v.name, v.id]}, input_html: { class: 'form-control customer_id' }, label: false
								.col-sm-2
									= link_to "Add Customer", new_customer_path, class: 'btn ink-reaction btn-flat btn-primary' unless Customer.exists?
						.col-md-6
							.form-group
								%label.col-sm-4.control-label Address
								.col-sm-8
									= text_area_tag :address, f.object.try(:customer).try(:address), class: 'form-control customer_address', disabled: true
									= f.hidden_field :user_id, value: current_user.id
					.row
						.col-md-6
							.form-group
								%label.col-sm-4.control-label Contact
								.col-sm-8
									= text_field_tag :contact, f.object.try(:customer).try(:cellphone), class: 'form-control customer_contact', disabled: true
						.col-md-6
							.form-group.control-width-normal
								#demo-date-format.input-group.date
									.input-group-content
										%input.form-control{:type => "text", name: "order[date]", value: f.object.date}/
										%label Date
									%span.input-group-addon
										%i.fa.fa-calendar

					%br/
					.row
						.panel.panel-default
							.panel-body
								%table.orders.table.table-bordered.table-striped.table-responsive.table-hover.no-margin
									%thead
										%tr
											%th
											%th Quantity
											%th Weight
											%th Price
											%th Amount
									%tbody
										-if f.object.new_record? and f.object.errors.blank?
											- @products.each do |product|
												%tr
													%td= product.title
													= f.fields_for :order_items do |order_item|
														= render partial: '/order_items/form', locals: { order_item: order_item, product: product }
										- else
											= f.fields_for :order_items, @order_items do |order_item|
												%tr
													%td= order_item.object.try(:product).try(:title)
													= render partial: '/order_items/form', locals: { order_item: order_item, product: order_item.object.try(:product) }
				.card-actionbar
					.card-actionbar-row
						= f.button :submit, class: "btn ink-reaction btn-primary btn-accent-modified"